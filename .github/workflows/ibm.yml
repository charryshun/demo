# This workflow will build a docker container, publish it to IBM Container Registry, and deploy it to IKS when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains a Dockerfile
# 2. Setup secrets in your repository by going to settings: Create ICR_NAMESPACE and IBM_CLOUD_API_KEY
# 3. Change the values for the IBM_CLOUD_REGION, REGISTRY_HOSTNAME, DOCKER_IMAGE_NAME, IKS_CLUSTER, DEPLOYMENT_NAME, and PORT

name: Build and Deploy to IKS

# on:
#   release:
#     types: [created]
on:
  push:
    branches: [ main ]
  pull_request_target:
#     types: [edited, assigned, opened, synchronize, reopened]

# Environment variables available to all jobs and steps in this workflow
env:
  IBM_CLOUD_API_KEY: ${{ secrets.IBM_CLOUD_API_KEY }}
  IBM_CLOUD_REGION: us-south
  IKS_CLUSTER: develop
  DOCKER_HUB_ORG: ${{ secrets.DOCKERHUB_ORG }}
  DOCKER_IMAGE_NAME: demo
  DOCKER_IMAGE_TAG: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.sha }}
  DEPLOYMENT_NAME: demo
  NAMESPACE: demo
  PORT: 8080

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Echo variables
      run: |
        echo "github.event_name:${{ github.event_name }}"
        echo "DOCKER_IMAGE_TAG:$DOCKER_IMAGE_TAG"

    - name: Checkout
      if: github.event_name == 'push'
      uses: actions/checkout@v2

    - name: Checkout forked repository
      if: github.event_name == 'pull_request_target'
      uses: actions/checkout@v2
      with:
        ref: ${{github.event.pull_request.head.ref}}
        repository: ${{github.event.pull_request.head.repo.full_name}}

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Build the Docker image
    - name: Build with Docker
      run: |
        docker build -t "$DOCKER_HUB_ORG"/"$DOCKER_IMAGE_NAME":"$DOCKER_IMAGE_TAG" .

    # Push the image to IBM Container Registry
    - name: Push the image to DockerHub
      run: |
        docker push "$DOCKER_HUB_ORG"/"$DOCKER_IMAGE_NAME":"$DOCKER_IMAGE_TAG"

  deploy:
    name: Deploy the Docker image to the IKS cluster
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      if: github.event_name == 'push'
      uses: actions/checkout@v2

    - name: Checkout forked repository
      if: github.event_name == 'pull_request_target'
      uses: actions/checkout@v2
      with:
        ref: ${{github.event.pull_request.head.ref}}
        repository: ${{github.event.pull_request.head.repo.full_name}}

    # Download and Install IBM Cloud CLI
    - name: Install IBM Cloud CLI
      run: |
        curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
        ibmcloud --version
        ibmcloud config --check-version=false
        ibmcloud plugin install -f kubernetes-service

    # Authenticate with IBM Cloud CLI
    - name: Authenticate with IBM Cloud CLI
      run: |
        ibmcloud login --apikey "${IBM_CLOUD_API_KEY}" -r "${IBM_CLOUD_REGION}" -g kubecf
        
    - name: Config IKS cluster
      run: |
        ibmcloud ks cluster config --cluster $IKS_CLUSTER
        kubectl config current-context
    
    - name: Install helm CLI
      uses: Azure/setup-helm@v1

    - name:
        # kubectl create deployment $DEPLOYMENT_NAME --namespace $NAMESPACE --image="$DOCKERHUB_ORG"/"$IMAGE_NAME":"$GITHUB_SHA" --dry-run=client -o yaml > deployment.yaml
        # kubectl apply -f deployment.yaml
        # kubectl rollout status --namespace $NAMESPACE deployment/$DEPLOYMENT_NAME
        # kubectl create --namespace $NAMESPACE service loadbalancer $DEPLOYMENT_NAME --tcp=80:$PORT --dry-run=client -o yaml > service.yaml
        # kubectl apply -f service.yaml
        # kubectl get services -o wide
        helm upgrade --install -f chart/values.yaml --set image.repository="$DOCKERHUB_ORG"/"$IMAGE_NAME",image.tag="$GITHUB_SHA",deployment.port=8080,namespace=$NAMESPACE chart/Chart.yaml $DEPLOYMENT_NAME
        helm list
